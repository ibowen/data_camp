REGISTER 'hdfs://master1.nmobile.local:8020/user/1604bowen/lib/piggybank.jar';REGISTER '/home/1604bowen/lib/elephant-bird-hadoop-compat-4.14-RC2.jar';REGISTER '/home/1604bowen/lib/elephant-bird-core-4.14-RC2.jar';REGISTER '/home/1604bowen/lib/elephant-bird-pig-4.14-RC2.jar';REGISTER '/home/1604bowen/lib/json-simple-1.1.1.jar';# businessbusiness = load '/user/1604bowen/yelp/business_json/yelp_training_set_business.json' using JsonLoader('business_id:chararray,	full_address:chararray,	open:chararray,	categories:[chararray],	city:chararray,	review_count:int,	name:chararray,	neighborhoods:[chararray],	longitude:chararray,	state:chararray,	stars:float,	latitude:chararray,	type:chararray');	business_id = foreach business generate business_id;business_id_sample = limit business_id 10;dump business_id_sample;# useruser = load '/user/1604bowen/yelp/user_json/yelp_training_set_user.json' using JsonLoader('votes:(funny:chararray,useful:chararray,cool:chararray),  	user_id:chararray,  	name:chararray,  	average_stars:float,  	review_count:chararray,  	type:chararray');			user_votes = foreach user generate votes.useful, votes.funny, votes.cool;user_votes_sample = limit user_votes 10;dump user_votes_sample;		# checkincheckin = LOAD '/user/1604bowen/yelp/checkin_json/yelp_training_set_checkin.json' USING com.twitter.elephantbird.pig.load.JsonLoader('-nestedLoad') AS (json:map []);checkin_row = FOREACH checkin GENERATE (map[])json#'checkin_info' As checkin_info, (chararray)json#'type' As type, (chararray)json#'business_id' As business_id;checkin_row_sample = limit checkin_row 10;-- check data DUMP checkin_row;STORE checkin_row INTO '/user/1604bowen/yelp/checkin_json/checkin_pig' USING PigStorage('\u0001');-- find the business for those who have checkins of more than 10 on Wednesday betwwen 11AM-12PMcheckinWed11To12MoreThan10 = FILTER json_checkin_row BY checkin_info#'11-3' > 10;DUMP checkinWed11To12MoreThan10;	# reviewreview = load '/user/1604bowen/yelp/review_json/yelp_training_set_review.json' using JsonLoader('votes:(funny:chararray,useful:chararray,cool:chararray),  	user_id:chararray,  	review_id:chararray,  	stars:int,  	date:datetime,  	text:chararray,  	type:chararray,  	business_id:chararray');  		review_project = foreach review generate user_id, date, type;review_sample = limit review_project 10;dump review_sample;business_sample = limit business 10;a1:{(a10:int,a11:chararray)},a2:(a20:double,a21:bytearray),a3:[chararray]'); a = load 'a.json' using JsonLoader(); 